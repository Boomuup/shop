<?php

namespace app\home\controller;

use app\common\model\Category;
use app\common\model\Goods;
use app\common\model\Order;
use app\common\model\Subgoods;
use think\Controller;
use app\common\model\User;
use think\Session;

/**
 *  订单管理
 * Class Flow
 * @package app\home\controller
 */

// 判断是否登陆，如果没有登陆，登陆后在操作
// 地址信息 如果有就用个人中心的
// 如果没有就添加

class Flow extends Controller
{
    private $categoryData;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if(!Session::get('user.user_id')){
            $this->error('请先登陆后在进行结算','/login.html');
        }
        // 调取分类数据
        // 获取后台分类表数据
        $this->categoryData = (new Category())->where('pid',0)->select();
    }
    /**
     *  结算页面
     */
    public function index(){
        // 获取地址栏数据
        // 获取地址栏信息
        $model = User::get(Session::get('user.user_id'));

        $address = $model->assAddr()->select();
        if($address){
            foreach ($address as $k =>$v){
                $v = $v->toArray();
                $v['address'] = json_decode($v['address'],true);
                $address[$k] = $v;

            }
        }
        $goodsData = Session::get('cart');
        // 将商品信息添加
        if(!is_null($goodsData)){
            foreach ($goodsData['goods'] as $k=>$v){
                $info = Goods::get($v['id'])->toArray();
                $goodsData['goods'][$k]['info'] = $info;
            }
        }

        if (request()->isPost()){
            $model = new Order();
            $model->order_name = 'ZY-'.Session::get('user.user_username').time();
            $model->address_id = input('post.address');
            $model->status = '未发货';
            $model->price = $goodsData['total'];
            $model->phone = input('post.phone');
            $model->username = input('post.username');
            $model->user_id = Session::get('user.user_id');
            $model->note = input('post.note');
            $model->goods_info = json_encode($goodsData,JSON_UNESCAPED_SLASHES|JSON_UNESCAPED_UNICODE);
            $res = $model->save();
            if($res){

                // 商品表中想要数据减少
                $goodModel = new Subgoods();
                foreach ($goodsData['goods'] as $k=>$v){
                    $num = $v['options'][0]['snum']-$v['num'];
                    Subgoods::where('id',$v['options'][0]['id'])->update(['snum'=>$num]);
                }
                // 清空购物车信息
                Session::delete('cart');
                $this->success('商品购买成功','/');
            }else{
                $this->error('购买失败');
            }
        }


        $categoryData = $this->categoryData;
        return view('',compact('categoryData','address','goodsData'));
    }
}
